{"version":3,"file":"9314.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECrCA;;;;;ACA0E;AAC1E;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,iDAAe","sources":["webpack://yaomin/./docs/.vuepress/.temp/pages/programming/index.html.js","webpack://yaomin/./docs/.vuepress/.temp/pages/programming/index.html.vue","webpack://yaomin/./docs/.vuepress/.temp/pages/programming/index.html.vue?7e12"],"sourcesContent":["export const data = {\n  \"key\": \"v-7065ffef\",\n  \"path\": \"/programming/\",\n  \"title\": \"编程\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"声明式编程\",\n      \"slug\": \"声明式编程\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"命令式编程\",\n      \"slug\": \"命令式编程\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"函数式编程\",\n      \"slug\": \"函数式编程\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"programming/README.md\",\n  \"git\": {\n    \"contributors\": [\n      {\n        \"name\": \"Amin.Yao\",\n        \"email\": \"Amin.Yao@gaiaworks.cn\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"编程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#编程\" aria-hidden=\"true\">#</a> 编程</h1>\n<h2 id=\"声明式编程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#声明式编程\" aria-hidden=\"true\">#</a> 声明式编程</h2>\n<p>通过表达式直接告诉计算机我们要的结果，具体操作由底层实现，我们并不关心，\n如sql，html，spring spel。</p>\n<h2 id=\"命令式编程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#命令式编程\" aria-hidden=\"true\">#</a> 命令式编程</h2>\n<p>一步一步告诉计算机先做什么再做什么。我们平时编写java，c等代码就是命令式编程。</p>\n<h2 id=\"函数式编程\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#函数式编程\" aria-hidden=\"true\">#</a> 函数式编程</h2>\n<p>就是将函数当做一个数据类型，函数作为参数，返回值，属性。\nJava不支持该模式，通过匿名类实现，如forEach方法。</p>\n","import { ssrRender } from \"./index.html.vue?vue&type=template&id=5c353492\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\@vuepress\\\\bundler-webpack\\\\lib\\\\build\\\\ssr\\\\vuepressLoader.js!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\vue-loader\\\\dist\\\\index.js??ruleSet[0].use[1]!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\docs\\\\.vuepress\\\\.temp\\\\pages\\\\programming\\\\index.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":[],"sourceRoot":""}