{"version":3,"file":"1004.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ECzBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAsF;AACtF;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,6DAAe","sources":["webpack://yaomin/./docs/.vuepress/.temp/pages/java/guava_bloomFilter.html.js","webpack://yaomin/./docs/.vuepress/.temp/pages/java/guava_bloomFilter.html.vue","webpack://yaomin/./docs/.vuepress/.temp/pages/java/guava_bloomFilter.html.vue?1767"],"sourcesContent":["export const data = {\n  \"key\": \"v-154ac153\",\n  \"path\": \"/java/guava_bloomFilter.html\",\n  \"title\": \"布隆过滤器\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"适用场景\",\n      \"slug\": \"适用场景\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/guava_bloomFilter.md\",\n  \"git\": {\n    \"contributors\": [\n      {\n        \"name\": \"Amin.Yao\",\n        \"email\": \"Amin.Yao@gaiaworks.cn\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"布隆过滤器\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#布隆过滤器\" aria-hidden=\"true\">#</a> 布隆过滤器</h1>\n<h2 id=\"适用场景\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#适用场景\" aria-hidden=\"true\">#</a> 适用场景</h2>\n<p>有些系统存在很多穿透到后端的空查询，由于后端查询占用资源较多，如CPU或者IO读写，严重影响系统的性能，此时如果能够有效的拦截空查询或无效查询，将大大提高系统的性能。</p>\n<p>如OceanBase数据库采用布隆过滤器，加速对空查询的过滤，提升了insert 的性能。</p>\n<p>以及网页URL 去重、垃圾邮件识别、黑名单、查询加速【比如基于KV结构的数据】、集合元素重复的判断、缓存穿透（缓存和数据库中都没有查询数据）等场景，也是布隆过滤器的理想使用之地。</p>\n<p>在很多KV数据库中也采用布隆过滤器来过滤空查询或无效查询，如 Hbase，Accumulo，Bigtable，Leveldb等。KV数据持久化到磁盘，每一次访问都需要消耗IO读写操作，\n如果存在大量的无效查询将导致性能的损失，为了保持只允许有效的查询才能够到磁盘访问，采用布隆过滤器是一个常用的选择。当然采用布隆过滤器会增加内存的消耗，以及对于有效查询的微量延迟。</p>\n<div class=\"language-java ext-java line-numbers-mode\"><pre v-pre class=\"language-java\"><code><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> test <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// guava工具实现</span>\n        <span class=\"token class-name\">BloomFilter</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">CharSequence</span><span class=\"token punctuation\">></span></span> bloomFilter <span class=\"token operator\">=</span> <span class=\"token class-name\">BloomFilter</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Funnels</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringFunnel</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Charset</span><span class=\"token punctuation\">.</span><span class=\"token function\">forName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100000000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        bloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">mightContain</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">mightContain</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wangwu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 以下是redis实现</span>\n        <span class=\"token class-name\">Config</span> config <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        \n        config<span class=\"token punctuation\">.</span><span class=\"token function\">useSingleServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAddress</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"redis://127.0.0.1:6378\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        config<span class=\"token punctuation\">.</span><span class=\"token function\">useSingleServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">RedissonClient</span> redisson <span class=\"token operator\">=</span> <span class=\"token class-name\">Redisson</span><span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">RBloomFilter</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">></span></span> rBloomFilter <span class=\"token operator\">=</span> redisson<span class=\"token punctuation\">.</span><span class=\"token function\">getBloomFilter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fruits\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 初始化，预计元素个数100000000，误差率为0.01%</span>\n        rBloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">tryInit</span><span class=\"token punctuation\">(</span><span class=\"token number\">100000000L</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.0001</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        rBloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zhangsan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        rBloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rBloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"lisi\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>rBloomFilter<span class=\"token punctuation\">.</span><span class=\"token function\">contains</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wangwu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n    \n\n\n\n\n\n\n\n\n\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br><span class=\"line-number\">32</span><br><span class=\"line-number\">33</span><br><span class=\"line-number\">34</span><br><span class=\"line-number\">35</span><br><span class=\"line-number\">36</span><br><span class=\"line-number\">37</span><br><span class=\"line-number\">38</span><br><span class=\"line-number\">39</span><br><span class=\"line-number\">40</span><br></div></div>","import { ssrRender } from \"./guava_bloomFilter.html.vue?vue&type=template&id=ed19a0ba\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\@vuepress\\\\bundler-webpack\\\\lib\\\\build\\\\ssr\\\\vuepressLoader.js!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\vue-loader\\\\dist\\\\index.js??ruleSet[0].use[1]!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\docs\\\\.vuepress\\\\.temp\\\\pages\\\\java\\\\guava_bloomFilter.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":[],"sourceRoot":""}