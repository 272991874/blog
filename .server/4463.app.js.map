{"version":3,"file":"4463.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;EC3CA;EAAA,uEACmD,EAAE,EAAC,SAAS;IAD/D,mCACuC,CAA4C;UADnF;QAAA;;;UAAA,kCACgE,QAAM;;;;IADtE;;EAAA;EAAA,uEACwG,EAAE,EAAC,eAAe;IAD1H,mCAC4F,CAAwD;UADpJ;QAAA;;;UAAA,kCAC2H,cAAY;;;;IADvI;;EAAA;EAAA,uEACyK,EAAE,EAAC,UAAU;IADtL,mCAC6J,CAA8C;UAD3M;QAAA;;;UAAA,kCACuL,SAAO;;;;IAD9L;;EAAA;EAAA,uEACgO,EAAE,EAAC,SAAS;IAD5O,mCACoN,CAA4C;UADhQ;QAAA;;;UAAA,kCAC6O,QAAM;;;;IADnP;;EAAA;;;;;AEAoF;AACpF;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,2DAAe","sources":["webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_jvm_option.html.js","webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_jvm_option.html.vue","webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_jvm_option.html.vue?f3aa","webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_jvm_option.html.vue?066a"],"sourcesContent":["export const data = {\n  \"key\": \"v-5443dfbd\",\n  \"path\": \"/java/java_jvm_option.html\",\n  \"title\": \"JVM调优常用参数\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"GC常用参数\",\n      \"slug\": \"gc常用参数\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"Parallel常用参数\",\n      \"slug\": \"parallel常用参数\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"CMS常用参数\",\n      \"slug\": \"cms常用参数\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"G1常用参数\",\n      \"slug\": \"g1常用参数\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"java/java_jvm_option.md\",\n  \"git\": {\n    \"contributors\": [\n      {\n        \"name\": \"yaomin\",\n        \"email\": \"272991874@qq.com\",\n        \"commits\": 2\n      }\n    ]\n  }\n}\n","<h1 id=\"jvm调优常用参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#jvm调优常用参数\" aria-hidden=\"true\">#</a> JVM调优常用参数</h1>\n<nav class=\"table-of-contents\"><ul><li><RouterLink to=\"#gc常用参数\">GC常用参数</RouterLink></li><li><RouterLink to=\"#parallel常用参数\">Parallel常用参数</RouterLink></li><li><RouterLink to=\"#cms常用参数\">CMS常用参数</RouterLink></li><li><RouterLink to=\"#g1常用参数\">G1常用参数</RouterLink></li></ul></nav>\n<h2 id=\"gc常用参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#gc常用参数\" aria-hidden=\"true\">#</a> GC常用参数</h2>\n<p>-Xmn -Xms -Xmx -Xss<br>\n年轻代 最小堆 最大堆 栈空间<br>\n-XX:+UseTLAB<br>\n使用TLAB，默认打开<br>\n-XX:+PrintTLAB<br>\n打印TLAB的使用情况<br>\n-XX:TLABSize<br>\n设置TLAB大小<br>\n-XX:+DisableExplictGC<br>\nSystem.gc()不管用 ，FGC<br>\n-XX:+PrintGC<br>\n-XX:+PrintGCDetails<br>\n-XX:+PrintHeapAtGC<br>\n-XX:+PrintGCTimeStamps<br>\n-XX:+PrintGCApplicationConcurrentTime (低)<br>\n打印应用程序时间<br>\n-XX:+PrintGCApplicationStoppedTime （低）<br>\n打印暂停时长<br>\n-XX:+PrintReferenceGC （重要性低）<br>\n记录回收了多少种不同引用类型的引用<br>\n-verbose:class<br>\n类加载详细过程<br>\n-XX:+PrintVMOptions<br>\n-XX:+PrintFlagsFinal -XX:+PrintFlagsInitial</p>\n<blockquote>\n<ul>\n<li>必须会用</li>\n</ul>\n</blockquote>\n<p>-Xloggc:opt/log/gc.log<br>\n-XX:MaxTenuringThreshold<br>\n升代年龄，最大值15<br>\n锁自旋次数 -XX:PreBlockSpin 热点代码检测参数-XX:CompileThreshold 逃逸分析 标量替换 …<br>\n这些不建议设置</p>\n<h2 id=\"parallel常用参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#parallel常用参数\" aria-hidden=\"true\">#</a> Parallel常用参数</h2>\n<p>-XX:SurvivorRatio<br>\n-XX:PreTenureSizeThreshold<br>\n大对象到底多大<br>\n-XX:MaxTenuringThreshold<br>\n-XX:+ParallelGCThreads<br>\n并行收集器的线程数，同样适用于CMS，一般设为和CPU核数相同<br>\n-XX:+UseAdaptiveSizePolicy<br>\n自动选择各区大小比例</p>\n<h2 id=\"cms常用参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#cms常用参数\" aria-hidden=\"true\">#</a> CMS常用参数</h2>\n<p>-XX:+UseConcMarkSweepGC<br>\n-XX:ParallelCMSThreads<br>\nCMS线程数量<br>\n-XX:CMSInitiatingOccupancyFraction<br>\n使用多少比例的老年代后开始CMS收集，默认是68%(近似值)，如果频繁发生SerialOld卡顿，应该调小，（频繁CMS回收）<br>\n-XX:+UseCMSCompactAtFullCollection<br>\n在FGC时进行压缩<br>\n-XX:CMSFullGCsBeforeCompaction<br>\n多少次FGC之后进行压缩<br>\n-XX:+CMSClassUnloadingEnabled<br>\n-XX:CMSInitiatingPermOccupancyFraction<br>\n达到什么比例时进行Perm回收<br>\nGCTimeRatio<br>\n设置GC时间占用程序运行时间的百分比<br>\n-XX:MaxGCPauseMillis<br>\n停顿时间，是一个建议时间，GC会尝试用各种手段达到这个时间，比如减小年轻代</p>\n<h2 id=\"g1常用参数\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#g1常用参数\" aria-hidden=\"true\">#</a> G1常用参数</h2>\n<p>-XX:+UseG1GC<br>\n-XX:MaxGCPauseMillis<br>\n建议值，G1会尝试调整Young区的块数来达到这个值<br>\n-XX:GCPauseIntervalMillis<br>\n？GC的间隔时间<br>\n-XX:+G1HeapRegionSize<br>\n分区大小，建议逐渐增大该值，1 2 4 8 16 32。<br>\n随着size增加，垃圾的存活时间更长，GC间隔更长，但每次GC的时间也会更长<br>\nZGC做了改进（动态区块大小）<br>\nG1NewSizePercent<br>\n新生代最小比例，默认为5%<br>\nG1MaxNewSizePercent<br>\n新生代最大比例，默认为60%<br>\nGCTimeRatio<br>\nGC时间建议比例，G1会根据这个值调整堆空间<br>\nConcGCThreads<br>\n线程数量<br>\nInitiatingHeapOccupancyPercent<br>\n启动G1的堆空间占用比例</p>\n","export * from \"-!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[1]!../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./java_jvm_option.html.vue?vue&type=template&id=2e3dedb8\"","import { ssrRender } from \"./java_jvm_option.html.vue?vue&type=template&id=2e3dedb8\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\@vuepress\\\\bundler-webpack\\\\lib\\\\build\\\\ssr\\\\vuepressLoader.js!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\vue-loader\\\\dist\\\\index.js??ruleSet[0].use[1]!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\docs\\\\.vuepress\\\\.temp\\\\pages\\\\java\\\\java_jvm_option.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":[],"sourceRoot":""}