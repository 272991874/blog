{"version":3,"file":"9130.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;EC/EA;EAAA,uEACmD,EAAE,EAAC,KAAK;IAD3D,mCACuC,CAAoC;UAD3E;QAAA;;;UAAA,kCAC4D,IAAE;;;;IAD9D;;EAAA;EAAA,uEACgG,EAAE,EAAC,cAAc;IADjH,mCACoF,CAAsD;UAD1I;QAAA;;;UAAA,kCACkH,aAAW;;;;IAD7H;;EAAA;EAAA,uEAC+J,EAAE,EAAC,QAAQ;IAD1K,mCACmJ,CAA0C;UAD7L;QAAA;;;UAAA,kCAC2K,OAAK;;;;IADhL;;EAAA;EAAA,uEACkN,EAAE,EAAC,OAAO;IAD5N,mCACsM,CAAwC;UAD9O;QAAA;;;UAAA,kCAC6N,MAAI;;;;IADjO;;EAAA;EAAA,uEACmQ,EAAE,EAAC,gBAAgB;IADtR,mCACuP,CAA0D;UADjT;QAAA;;;UAAA,kCACuR,eAAa;;;;IADpS;;EAAA;EAAA,uEACsU,EAAE,EAAC,MAAM;IAD/U,mCAC0T,CAAsC;UADhW;QAAA;;;UAAA,kCACgV,KAAG;;;;IADnV;;EAAA;EAAA,uEACqX,EAAE,EAAC,UAAU;IADlY,mCACyW,CAA8C;UADvZ;QAAA;;;UAAA,kCACmY,SAAO;;;;IAD1Y;;EAAA;EAAA,uEAC4a,EAAE,EAAC,MAAM;IADrb,mCACga,CAAsC;UADtc;QAAA;;;UAAA,kCACsb,KAAG;;;;IADzb;;EAAA;EAAA,uEAC2d,EAAE,EAAC,OAAO;IADre,mCAC+c,CAAwC;UADvf;QAAA;;;UAAA,kCACse,MAAI;;;;IAD1e;;EAAA;EAAA,uEAC4gB,EAAE,EAAC,QAAQ;IADvhB,mCACggB,CAA0C;UAD1iB;QAAA;;;UAAA,kCACwhB,OAAK;;;;IAD7hB;;EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAkF;AAClF;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,yDAAe","sources":["webpack://yaomin/./docs/.vuepress/.temp/pages/soft/mysql_explain.html.js","webpack://yaomin/./docs/.vuepress/.temp/pages/soft/mysql_explain.html.vue","webpack://yaomin/./docs/.vuepress/.temp/pages/soft/mysql_explain.html.vue?4c28","webpack://yaomin/./docs/.vuepress/.temp/pages/soft/mysql_explain.html.vue?7924"],"sourcesContent":["export const data = {\n  \"key\": \"v-3e6cadab\",\n  \"path\": \"/soft/mysql_explain.html\",\n  \"title\": \"mysql-explain\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"id\",\n      \"slug\": \"id\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"select_type\",\n      \"slug\": \"select-type\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"table\",\n      \"slug\": \"table\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"type\",\n      \"slug\": \"type\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"possible_keys\",\n      \"slug\": \"possible-keys\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"key\",\n      \"slug\": \"key\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"key_len\",\n      \"slug\": \"key-len\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"ref\",\n      \"slug\": \"ref\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"rows\",\n      \"slug\": \"rows\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"extra\",\n      \"slug\": \"extra\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"soft/mysql_explain.md\",\n  \"git\": {\n    \"contributors\": [\n      {\n        \"name\": \"yaomin\",\n        \"email\": \"272991874@qq.com\",\n        \"commits\": 2\n      }\n    ]\n  }\n}\n","<h1 id=\"mysql-explain\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#mysql-explain\" aria-hidden=\"true\">#</a> mysql-explain</h1>\n<nav class=\"table-of-contents\"><ul><li><RouterLink to=\"#id\">id</RouterLink></li><li><RouterLink to=\"#select-type\">select_type</RouterLink></li><li><RouterLink to=\"#table\">table</RouterLink></li><li><RouterLink to=\"#type\">type</RouterLink></li><li><RouterLink to=\"#possible-keys\">possible_keys</RouterLink></li><li><RouterLink to=\"#key\">key</RouterLink></li><li><RouterLink to=\"#key-len\">key_len</RouterLink></li><li><RouterLink to=\"#ref\">ref</RouterLink></li><li><RouterLink to=\"#rows\">rows</RouterLink></li><li><RouterLink to=\"#extra\">extra</RouterLink></li></ul></nav>\n<p>在企业的应用场景中，为了知道优化SQL语句的执行，需要查看SQL语句的具体执行过程，以加快SQL语句的执行效率。</p>\n<p>​ 可以使用explain+SQL语句来模拟优化器执行SQL查询语句，从而知道mysql是如何处理sql语句的。</p>\n<p>​ 官网文档</p>\n<p>执行计划中包含的信息</p>\n<div class=\"language-bash ext-sh line-numbers-mode\"><pre v-pre class=\"language-bash\"><code>mysql<span class=\"token operator\">></span> explain <span class=\"token keyword\">select</span> count<span class=\"token punctuation\">(</span><span class=\"token environment constant\">USER</span><span class=\"token punctuation\">)</span> from <span class=\"token function\">users</span><span class=\"token punctuation\">;</span>\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n<span class=\"token operator\">|</span> <span class=\"token function\">id</span> <span class=\"token operator\">|</span> select_type <span class=\"token operator\">|</span> table <span class=\"token operator\">|</span> partitions <span class=\"token operator\">|</span> <span class=\"token builtin class-name\">type</span> <span class=\"token operator\">|</span> possible_keys <span class=\"token operator\">|</span> key  <span class=\"token operator\">|</span> key_len <span class=\"token operator\">|</span> ref  <span class=\"token operator\">|</span> rows <span class=\"token operator\">|</span> filtered <span class=\"token operator\">|</span> Extra <span class=\"token operator\">|</span>\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n<span class=\"token operator\">|</span>  <span class=\"token number\">1</span> <span class=\"token operator\">|</span> SIMPLE      <span class=\"token operator\">|</span> <span class=\"token function\">users</span> <span class=\"token operator\">|</span> NULL       <span class=\"token operator\">|</span> ALL  <span class=\"token operator\">|</span> NULL          <span class=\"token operator\">|</span> NULL <span class=\"token operator\">|</span> NULL    <span class=\"token operator\">|</span> NULL <span class=\"token operator\">|</span>  <span class=\"token number\">128</span> <span class=\"token operator\">|</span>   <span class=\"token number\">100.00</span> <span class=\"token operator\">|</span> NULL  <span class=\"token operator\">|</span>\n+----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------+\n<span class=\"token number\">1</span> row <span class=\"token keyword\">in</span> set, <span class=\"token number\">1</span> warning <span class=\"token punctuation\">(</span><span class=\"token number\">0.00</span> sec<span class=\"token punctuation\">)</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br></div></div><table>\n<thead>\n<tr>\n<th>Column</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>The SELECT identifier</td>\n</tr>\n<tr>\n<td>select_type</td>\n<td>The SELECT type</td>\n</tr>\n<tr>\n<td>table</td>\n<td>The table for the output row</td>\n</tr>\n<tr>\n<td>partitions</td>\n<td>The matching partitions</td>\n</tr>\n<tr>\n<td>type</td>\n<td>The join type</td>\n</tr>\n<tr>\n<td>possible_keys</td>\n<td>The possible indexes to choose</td>\n</tr>\n<tr>\n<td>key</td>\n<td>The index actually chosen</td>\n</tr>\n<tr>\n<td>key_len</td>\n<td>The length of the chosen key</td>\n</tr>\n<tr>\n<td>ref</td>\n<td>The columns compared to the index</td>\n</tr>\n<tr>\n<td>rows</td>\n<td>Estimate of rows to be examined</td>\n</tr>\n<tr>\n<td>filtered</td>\n<td>Percentage of rows filtered by table condition</td>\n</tr>\n<tr>\n<td>extra</td>\n<td>Additional information</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"id\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#id\" aria-hidden=\"true\">#</a> id</h2>\n<p>select查询的序列号，包含一组数字，表示查询中执行select子句或者操作表的顺序</p>\n<p>id号分为三种情况：</p>\n<p>​ 1、如果id相同，那么执行顺序从上到下</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e <span class=\"token keyword\">join</span> dept d <span class=\"token keyword\">on</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token keyword\">join</span> salgrade sg <span class=\"token keyword\">on</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">between</span> sg<span class=\"token punctuation\">.</span>losal <span class=\"token operator\">and</span> sg<span class=\"token punctuation\">.</span>hisal<span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>​ 2、如果id不同，如果是子查询，id的序号会递增，id值越大优先级越高，越先被执行</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token keyword\">from</span> dept d <span class=\"token keyword\">where</span> d<span class=\"token punctuation\">.</span>dname <span class=\"token operator\">=</span> <span class=\"token string\">'SALES'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><p>​ 3、id相同和不同的，同时存在：相同的可以认为是一组，从上往下顺序执行，在所有组中，id值越大，优先级越高，越先执行</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e <span class=\"token keyword\">join</span> dept d <span class=\"token keyword\">on</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token keyword\">join</span> salgrade sg <span class=\"token keyword\">on</span> e<span class=\"token punctuation\">.</span>sal <span class=\"token operator\">between</span> sg<span class=\"token punctuation\">.</span>losal <span class=\"token operator\">and</span> sg<span class=\"token punctuation\">.</span>hisal <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> d<span class=\"token punctuation\">.</span>deptno <span class=\"token keyword\">from</span> dept d <span class=\"token keyword\">where</span> d<span class=\"token punctuation\">.</span>dname <span class=\"token operator\">=</span> <span class=\"token string\">'SALES'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"select-type\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#select-type\" aria-hidden=\"true\">#</a> select_type</h2>\n<p>主要用来分辨查询的类型，是普通查询还是联合查询还是子查询</p>\n<table>\n<thead>\n<tr>\n<th>select_type Value</th>\n<th>Meaning</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>SIMPLE</td>\n<td>Simple SELECT (not using UNION or subqueries)</td>\n</tr>\n<tr>\n<td>PRIMARY</td>\n<td>Outermost SELECT</td>\n</tr>\n<tr>\n<td>UNION</td>\n<td>Second or later SELECT statement in a UNION</td>\n</tr>\n<tr>\n<td>DEPENDENT UNION</td>\n<td>Second or later SELECT statement in a UNION, dependent on outer query</td>\n</tr>\n<tr>\n<td>UNION RESULT</td>\n<td>Result of a UNION.</td>\n</tr>\n<tr>\n<td>SUBQUERY</td>\n<td>First SELECT in subquery</td>\n</tr>\n<tr>\n<td>DEPENDENT SUBQUERY</td>\n<td>First SELECT in subquery, dependent on outer query</td>\n</tr>\n<tr>\n<td>DERIVED</td>\n<td>Derived table</td>\n</tr>\n<tr>\n<td>UNCACHEABLE SUBQUERY</td>\n<td>A subquery for which the result cannot be cached and must be re-evaluated for each row of the outer query</td>\n</tr>\n<tr>\n<td>UNCACHEABLE UNION</td>\n<td>The second or later select in a UNION that belongs to an uncacheable subquery (see UNCACHEABLE SUBQUERY)</td>\n</tr>\n</tbody>\n</table>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token comment\">--sample:简单的查询，不包含子查询和union</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--primary:查询中若包含任何复杂的子查询，最外层查询则被标记为Primary</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> staname<span class=\"token punctuation\">,</span>ename supname <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> ename staname<span class=\"token punctuation\">,</span>mgr <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">)</span> t <span class=\"token keyword\">join</span> emp <span class=\"token keyword\">on</span> t<span class=\"token punctuation\">.</span>mgr<span class=\"token operator\">=</span>emp<span class=\"token punctuation\">.</span>empno <span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--union:若第二个select出现在union之后，则被标记为union</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> sal <span class=\"token operator\">></span><span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--dependent union:跟union类似，此处的depentent表示union或union all联合而成的结果会受外部表影响</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>empno  <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span> <span class=\"token keyword\">select</span> empno <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> empno <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> sal <span class=\"token operator\">></span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">--union result:从union表获取结果的select</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token keyword\">union</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> sal <span class=\"token operator\">></span><span class=\"token number\">2000</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--subquery:在select或者where列表中包含子查询</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> sal <span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token function\">avg</span><span class=\"token punctuation\">(</span>sal<span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--dependent subquery:subquery的子查询要受到外部表查询的影响</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> deptno <span class=\"token keyword\">from</span> dept<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--DERIVED: from子句中出现的子查询，也叫做派生类，</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> staname<span class=\"token punctuation\">,</span>ename supname <span class=\"token keyword\">from</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> ename staname<span class=\"token punctuation\">,</span>mgr <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">)</span> t <span class=\"token keyword\">join</span> emp <span class=\"token keyword\">on</span> t<span class=\"token punctuation\">.</span>mgr<span class=\"token operator\">=</span>emp<span class=\"token punctuation\">.</span>empno <span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--UNCACHEABLE SUBQUERY：表示使用子查询的结果不能被缓存</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> empno <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> empno <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> deptno<span class=\"token operator\">=</span>@<span class=\"token variable\">@sort_buffer_size</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--uncacheable union:表示union的查询结果不能被缓存：sql语句未验证</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br></div></div><h2 id=\"table\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#table\" aria-hidden=\"true\">#</a> table</h2>\n<p>对应行正在访问哪一个表，表名或者别名，可能是临时表或者union合并结果集</p>\n<p>1、如果是具体的表名，则表明从实际的物理表中获取数据，当然也可以是表的别名</p>\n<p>​ 2、表名是derivedN的形式，表示使用了id为N的查询产生的衍生表</p>\n<p>​ 3、当有union result的时候，表名是union n1,n2等的形式，n1,n2表示参与union的id</p>\n<h2 id=\"type\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#type\" aria-hidden=\"true\">#</a> type</h2>\n<p>type显示的是访问类型，访问类型表示我是以何种方式去访问我们的数据，最容易想的是全表扫描，直接暴力的遍历一张表去寻找需要的数据，效率非常低下，访问的类型有很多，效率从最好到最坏依次是：</p>\n<blockquote>\n<p>system &gt; const &gt; eq_ref &gt; ref &gt; fulltext &gt; ref_or_null &gt; index_merge &gt; unique_subquery &gt; index_subquery &gt; range &gt; index &gt; ALL</p>\n</blockquote>\n<p>一般情况下，得保证查询至少达到range级别，最好能达到ref(代表索引充分利用)</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token comment\">--all:全表扫描，一般情况下出现这样的sql语句而且数据量比较大的话那么就需要进行优化。</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--index：全索引扫描这个比all的效率要好，主要有两种情况，一种是当前的查询时覆盖索引，即我们需要的数据在索引中就可以索取，或者是使用了索引进行排序，这样就避免数据的重排序</span>\n<span class=\"token keyword\">explain</span>  <span class=\"token keyword\">select</span> empno <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--range：表示利用索引查询的时候限制了范围，在指定范围内进行查询，这样避免了index的全索引扫描，适用的操作符： =, &lt;>, >, >=, &lt;, &lt;=, IS NULL, BETWEEN, LIKE, or IN() </span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> empno <span class=\"token operator\">between</span> <span class=\"token number\">7000</span> <span class=\"token operator\">and</span> <span class=\"token number\">7500</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--index_subquery：利用索引来关联子查询，不再扫描全表</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> emp<span class=\"token punctuation\">.</span>job <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> job <span class=\"token keyword\">from</span> t_job<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--unique_subquery:该连接类型类似与index_subquery,使用的是唯一索引</span>\n <span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">select</span> <span class=\"token keyword\">distinct</span> deptno <span class=\"token keyword\">from</span> dept<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--index_merge：在查询过程中需要多个索引组合使用，没有模拟出来</span>\n\n<span class=\"token comment\">--ref_or_null：对于某个字段即需要关联条件，也需要null值的情况下，查询优化器会选择这种访问方式</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e <span class=\"token keyword\">where</span>  e<span class=\"token punctuation\">.</span>mgr <span class=\"token operator\">is</span> <span class=\"token boolean\">null</span> <span class=\"token operator\">or</span> e<span class=\"token punctuation\">.</span>mgr<span class=\"token operator\">=</span><span class=\"token number\">7369</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--ref：使用了非唯一性索引进行数据的查找</span>\n <span class=\"token keyword\">create</span> <span class=\"token keyword\">index</span> idx_3 <span class=\"token keyword\">on</span> emp<span class=\"token punctuation\">(</span>deptno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp e<span class=\"token punctuation\">,</span>dept d <span class=\"token keyword\">where</span> e<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span>d<span class=\"token punctuation\">.</span>deptno<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--eq_ref ：使用唯一性索引进行数据查找</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">,</span>emp2 <span class=\"token keyword\">where</span> emp<span class=\"token punctuation\">.</span>empno <span class=\"token operator\">=</span> emp2<span class=\"token punctuation\">.</span>empno<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--const：这个表至多有一个匹配行，</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> empno <span class=\"token operator\">=</span> <span class=\"token number\">7369</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--system：表只有一行记录（等于系统表），这是const类型的特例，平时不会出现</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br><span class=\"line-number\">19</span><br><span class=\"line-number\">20</span><br><span class=\"line-number\">21</span><br><span class=\"line-number\">22</span><br><span class=\"line-number\">23</span><br><span class=\"line-number\">24</span><br><span class=\"line-number\">25</span><br><span class=\"line-number\">26</span><br><span class=\"line-number\">27</span><br><span class=\"line-number\">28</span><br><span class=\"line-number\">29</span><br><span class=\"line-number\">30</span><br><span class=\"line-number\">31</span><br></div></div><h2 id=\"possible-keys\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#possible-keys\" aria-hidden=\"true\">#</a> possible_keys</h2>\n<p>​ 显示可能应用在这张表中的索引，一个或多个，查询涉及到的字段上若存在索引，则该索引将被列出，但不一定被查询实际使用</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">,</span>dept <span class=\"token keyword\">where</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">and</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"key\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key\" aria-hidden=\"true\">#</a> key</h2>\n<p>​ 实际使用的索引，如果为null，则没有使用索引，查询中若使用了覆盖索引，则该索引和查询的select字段重叠。</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">,</span>dept <span class=\"token keyword\">where</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">and</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"key-len\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#key-len\" aria-hidden=\"true\">#</a> key_len</h2>\n<p>表示索引中使用的字节数，可以通过key_len计算查询中使用的索引长度，在不损失精度的情况下长度越短越好。</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">,</span>dept <span class=\"token keyword\">where</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">and</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"ref\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#ref\" aria-hidden=\"true\">#</a> ref</h2>\n<p>显示索引的哪一列被使用了，如果可能的话，是一个常数</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">,</span>dept <span class=\"token keyword\">where</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> dept<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">and</span> emp<span class=\"token punctuation\">.</span>deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"rows\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#rows\" aria-hidden=\"true\">#</a> rows</h2>\n<p>根据表的统计信息及索引使用情况，大致估算出找出所需记录需要读取的行数，此参数很重要，直接反应的sql找了多少数据，在完成目的的情况下越少越好</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp<span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br></div></div><h2 id=\"extra\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#extra\" aria-hidden=\"true\">#</a> extra</h2>\n<p>包含额外的信息。</p>\n<div class=\"language-sql ext-sql line-numbers-mode\"><pre v-pre class=\"language-sql\"><code><span class=\"token comment\">--using filesort:说明mysql无法利用索引进行排序，只能利用排序算法进行排序，会消耗额外的位置</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> sal<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--using temporary:建立临时表来保存中间结果，查询完成之后把临时表删除</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> ename<span class=\"token punctuation\">,</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> deptno <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> ename<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--using index:这个表示当前的查询时覆盖索引的，直接从索引中读取数据，而不用访问数据表。如果同时出现using where 表名索引被用来执行索引键值的查找，如果没有，表面索引被用来读取数据，而不是真的查找</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> deptno<span class=\"token punctuation\">,</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">group</span> <span class=\"token keyword\">by</span> deptno <span class=\"token keyword\">limit</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--using where:使用where进行条件过滤</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> t_user <span class=\"token keyword\">where</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">--using join buffer:使用连接缓存，情况没有模拟出来</span>\n\n<span class=\"token comment\">--impossible where：where语句的结果总是false</span>\n<span class=\"token keyword\">explain</span> <span class=\"token keyword\">select</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">from</span> emp <span class=\"token keyword\">where</span> empno <span class=\"token operator\">=</span> <span class=\"token number\">7469</span><span class=\"token punctuation\">;</span>\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br></div></div>","export * from \"-!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[1]!../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./mysql_explain.html.vue?vue&type=template&id=0409a80f\"","import { ssrRender } from \"./mysql_explain.html.vue?vue&type=template&id=0409a80f\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\@vuepress\\\\bundler-webpack\\\\lib\\\\build\\\\ssr\\\\vuepressLoader.js!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\vue-loader\\\\dist\\\\index.js??ruleSet[0].use[1]!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\docs\\\\.vuepress\\\\.temp\\\\pages\\\\soft\\\\mysql_explain.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":[],"sourceRoot":""}