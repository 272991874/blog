{"version":3,"file":"8156.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;EC/DA;EAAA,uEACmD,EAAE,EAAC,QAAQ;IAD9D,mCACuC,CAA0C;UADjF;QAAA;;;UAAA,kCAC+D,OAAK;;;;IADpE;;EAAA;EAAA,uEACqG,EAAE,EAAC,aAAa;IADrH,mCACyF,CAAqD;UAD9I;QAAA;;;UAAA,kCACsH,aAAW;;;;IADjI;;EAAA;EAAA,uEACmK,EAAE,EAAC,UAAU;IADhL,mCACuJ,CAA+C;UADtM;QAAA;;;UAAA,kCACiL,UAAQ;;;;IADzL;;EAAA;EAAA,uEACqO,EAAE,EAAC,UAAU;IADlP,mCACyN,CAA8C;UADvQ;QAAA;;;UAAA,kCACmP,SAAO;;;;IAD1P;;EAAA;EAAA,uEAC4R,EAAE,EAAC,iCAAiC;IADhU,mCACgR,CAA4F;UAD5W;QAAA;;;UAAA,kCACiU,gCAA8B;;;;IAD/V;;EAAA;EAAA,uEACgY,EAAE,EAAC,eAAe;IADlZ,mCACoX,CAAwD;UAD5a;QAAA;;;UAAA,kCACmZ,cAAY;;;;IAD/Z;;EAAA;EAAA,uEACic,EAAE,EAAC,mBAAmB;IADvd,mCACqb,CAAgE;UADrf;QAAA;;;UAAA,kCACwd,kBAAgB;;;;IADxe;;EAAA;;;;;;;;;;;;;;;;;;;;;;;AEAkF;AAClF;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,yDAAe","sources":["webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_volatile.html.js","webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_volatile.html.vue","webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_volatile.html.vue?972c","webpack://yaomin/./docs/.vuepress/.temp/pages/java/java_volatile.html.vue?b335"],"sourcesContent":["export const data = {\n  \"key\": \"v-7137c354\",\n  \"path\": \"/java/java_volatile.html\",\n  \"title\": \"volatile关键字\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"线程可见性\",\n      \"slug\": \"线程可见性\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"什么是线程间的可见性？\",\n          \"slug\": \"什么是线程间的可见性\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"什么是共享变量？\",\n          \"slug\": \"什么是共享变量\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"禁止指令重排序\",\n      \"slug\": \"禁止指令重排序\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"禁止指令重排序volatile与synchrinized实现\",\n      \"slug\": \"禁止指令重排序volatile与synchrinized实现\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"volatile实现细节\",\n          \"slug\": \"volatile实现细节\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"synchrinized实现细节\",\n          \"slug\": \"synchrinized实现细节\",\n          \"children\": []\n        }\n      ]\n    }\n  ],\n  \"filePathRelative\": \"java/java_volatile.md\",\n  \"git\": {\n    \"contributors\": [\n      {\n        \"name\": \"yaomin\",\n        \"email\": \"272991874@qq.com\",\n        \"commits\": 1\n      }\n    ]\n  }\n}\n","<h1 id=\"volatile关键字\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#volatile关键字\" aria-hidden=\"true\">#</a> volatile关键字</h1>\n<nav class=\"table-of-contents\"><ul><li><RouterLink to=\"#线程可见性\">线程可见性</RouterLink><ul><li><RouterLink to=\"#什么是线程间的可见性\">什么是线程间的可见性？</RouterLink></li><li><RouterLink to=\"#什么是共享变量\">什么是共享变量？</RouterLink></li></ul></li><li><RouterLink to=\"#禁止指令重排序\">禁止指令重排序</RouterLink></li><li><RouterLink to=\"#禁止指令重排序volatile与synchrinized实现\">禁止指令重排序volatile与synchrinized实现</RouterLink><ul><li><RouterLink to=\"#volatile实现细节\">volatile实现细节</RouterLink></li><li><RouterLink to=\"#synchrinized实现细节\">synchrinized实现细节</RouterLink></li></ul></li></ul></nav>\n<p>volatile用来修饰变量，使变量保持线程的可见性。</p>\n<h2 id=\"线程可见性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#线程可见性\" aria-hidden=\"true\">#</a> 线程可见性</h2>\n<h3 id=\"什么是线程间的可见性\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#什么是线程间的可见性\" aria-hidden=\"true\">#</a> 什么是线程间的可见性？</h3>\n<p>一个线程对共享变量值的修改，能够及时的被其他线程看到。</p>\n<h3 id=\"什么是共享变量\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#什么是共享变量\" aria-hidden=\"true\">#</a> 什么是共享变量？</h3>\n<p>如果一个变量在多个线程的工作内存中都存在副本，那么这个变量就是这几个线程的共享变量。</p>\n<p>volatile对线程可见性的实现使用了CPU的缓存一致性协议（其中最出名的为Intel的MESI协议）来确保线程可见性</p>\n<h2 id=\"禁止指令重排序\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#禁止指令重排序\" aria-hidden=\"true\">#</a> 禁止指令重排序</h2>\n<p>volatile通过加入内存屏障来禁止指令的重排序，loadfence/storefence结合使用实现\nDCL(Double Check Lock 双重检查锁定)单例需要加volatile，否则在对象创建的半初始化状态的时候可能发生指令重排序</p>\n<div class=\"language-text ext-text line-numbers-mode\"><pre v-pre class=\"language-text\"><code>    假设o中有个int类型参数a，new o的时候将a赋值为8\n\n    Objtec o=null; //1\n    //int类型初始值为0，即a=0\n    半初始化o.a=8; //2\n    o=半初始化o; //3\n\n\n    当发生了指令重排序后\n\n    Objtec o=null; //1\n    //int类型初始值为0，即a=0\n    o=半初始化o; //3\n    半初始化o.a=8; //2\n\n    即2与3发生了指令重排序，导致破坏了1多线程程序的语义\n    具体半初始化见JVM\n\n</code></pre><div class=\"line-numbers\"><span class=\"line-number\">1</span><br><span class=\"line-number\">2</span><br><span class=\"line-number\">3</span><br><span class=\"line-number\">4</span><br><span class=\"line-number\">5</span><br><span class=\"line-number\">6</span><br><span class=\"line-number\">7</span><br><span class=\"line-number\">8</span><br><span class=\"line-number\">9</span><br><span class=\"line-number\">10</span><br><span class=\"line-number\">11</span><br><span class=\"line-number\">12</span><br><span class=\"line-number\">13</span><br><span class=\"line-number\">14</span><br><span class=\"line-number\">15</span><br><span class=\"line-number\">16</span><br><span class=\"line-number\">17</span><br><span class=\"line-number\">18</span><br></div></div><h2 id=\"禁止指令重排序volatile与synchrinized实现\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#禁止指令重排序volatile与synchrinized实现\" aria-hidden=\"true\">#</a> 禁止指令重排序volatile与synchrinized实现</h2>\n<h3 id=\"volatile实现细节\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#volatile实现细节\" aria-hidden=\"true\">#</a> volatile实现细节</h3>\n<h4 id=\"_1-字节码层面\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-字节码层面\" aria-hidden=\"true\">#</a> 1. 字节码层面</h4>\n<ul>\n<li>字节码中会将Fields中的参数添加Access flags：0x0040 ACC_VOLATILE</li>\n</ul>\n<h4 id=\"_2-jvm层面\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-jvm层面\" aria-hidden=\"true\">#</a> 2.JVM层面</h4>\n<ul>\n<li>他对所有内存volatile写操作前加了StoreStoreBarrier，后面加了一个StoreLoadBarrier</li>\n<li>对所有读操作前加上了LoadLoadBarrier,后面加了一个LoadStoreBarrier</li>\n</ul>\n<h4 id=\"_3-os和硬件层面\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-os和硬件层面\" aria-hidden=\"true\">#</a> 3.OS和硬件层面</h4>\n<ul>\n<li>使用hsdis观察汇编码 hsdis – Hotspot Dis Assembler 虚拟机的反汇编</li>\n</ul>\n<h3 id=\"synchrinized实现细节\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#synchrinized实现细节\" aria-hidden=\"true\">#</a> synchrinized实现细节</h3>\n<h4 id=\"_1-字节码层面-1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_1-字节码层面-1\" aria-hidden=\"true\">#</a> 1.字节码层面：</h4>\n<p>方法添加0x0020 ACC_SYNCHRONIZED标志\n汇编添加一对monitorenter与monitorexit\n由于遇到异常也会自动退出，所有有两条exit</p>\n<h4 id=\"_2-jvm层面-1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_2-jvm层面-1\" aria-hidden=\"true\">#</a> 2.JVM层面：</h4>\n<p>C和C++调用了操作系统提供的同步机制</p>\n<h4 id=\"_3-os和硬件层面-1\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#_3-os和硬件层面-1\" aria-hidden=\"true\">#</a> 3.OS和硬件层面</h4>\n<p>X86：lock comxchg xxxx</p>\n<div class=\"custom-container tip\"><p class=\"custom-container-title\">lock指令 xxx执行 xxx指令的时候保证对内存区域加锁</p>\n</div>\n","export * from \"-!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[1]!../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./java_volatile.html.vue?vue&type=template&id=be4b4470\"","import { ssrRender } from \"./java_volatile.html.vue?vue&type=template&id=be4b4470\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\@vuepress\\\\bundler-webpack\\\\lib\\\\build\\\\ssr\\\\vuepressLoader.js!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\vue-loader\\\\dist\\\\index.js??ruleSet[0].use[1]!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\docs\\\\.vuepress\\\\.temp\\\\pages\\\\java\\\\java_volatile.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":[],"sourceRoot":""}