{"version":3,"file":"9440.app.js","mappings":";;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;EClDA;EAAA,uEACmD,EAAE,EAAC,WAAW;IADjE,mCACuC,CAAgD;UADvF;QAAA;;;UAAA,kCACkE,UAAQ;;;;IAD1E;;EAAA;EAAA,uEAC4G,EAAE,EAAC,uBAAuB;IADtI,mCACgG,CAAwE;UADxK;QAAA;;;UAAA,kCACuI,sBAAoB;;;;IAD3J;;EAAA;EAAA,uEAC4L,EAAE,EAAC,MAAM;IADrM,mCACgL,CAAsC;UADtN;QAAA;;;UAAA,kCACsM,KAAG;;;;IADzM;;EAAA;EAAA,uEAC2O,EAAE,EAAC,OAAO;IADrP,mCAC+N,CAAwC;UADvQ;QAAA;;;UAAA,kCACsP,MAAI;;;;IAD1P;;EAAA;EAAA,uEACsS,EAAE,EAAC,cAAc;IADvT,mCAC0R,CAAsD;UADhV;QAAA;;;UAAA,kCACwT,aAAW;;;;IADnU;;EAAA,k5CAqBM,KAAG,EAAEA,cAAS;;;;;AErBqE;AACzF;AACA,CAAmC;AACnC;AACA,iDAAiD,2BAAa;AAC9D;AACA,SAAS,SAAS;AAClB;;;AAGA,gEAAe","sources":["webpack://yaomin/./docs/.vuepress/.temp/pages/algorithm/Zero_Knowledge_Proof.html.js","webpack://yaomin/./docs/.vuepress/.temp/pages/algorithm/Zero_Knowledge_Proof.html.vue","webpack://yaomin/./docs/.vuepress/.temp/pages/algorithm/Zero_Knowledge_Proof.html.vue?2d99","webpack://yaomin/./docs/.vuepress/.temp/pages/algorithm/Zero_Knowledge_Proof.html.vue?5dbd"],"sourcesContent":["export const data = {\n  \"key\": \"v-14fa9694\",\n  \"path\": \"/algorithm/Zero_Knowledge_Proof.html\",\n  \"title\": \"零知识证明\",\n  \"lang\": \"zh-CN\",\n  \"frontmatter\": {},\n  \"excerpt\": \"\",\n  \"headers\": [\n    {\n      \"level\": 2,\n      \"title\": \"什么是零知识证明\",\n      \"slug\": \"什么是零知识证明\",\n      \"children\": []\n    },\n    {\n      \"level\": 2,\n      \"title\": \"零知识证明可以分为交互式和非交互式两种。\",\n      \"slug\": \"零知识证明可以分为交互式和非交互式两种。\",\n      \"children\": [\n        {\n          \"level\": 3,\n          \"title\": \"交互式\",\n          \"slug\": \"交互式\",\n          \"children\": []\n        },\n        {\n          \"level\": 3,\n          \"title\": \"非交互式\",\n          \"slug\": \"非交互式\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"level\": 2,\n      \"title\": \"区块链-零知识证明使用\",\n      \"slug\": \"区块链-零知识证明使用\",\n      \"children\": []\n    }\n  ],\n  \"filePathRelative\": \"algorithm/Zero_Knowledge_Proof.md\",\n  \"git\": {\n    \"contributors\": [\n      {\n        \"name\": \"yaomin\",\n        \"email\": \"272991874@qq.com\",\n        \"commits\": 3\n      }\n    ]\n  }\n}\n","<h1 id=\"零知识证明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#零知识证明\" aria-hidden=\"true\">#</a> 零知识证明</h1>\n<nav class=\"table-of-contents\"><ul><li><RouterLink to=\"#什么是零知识证明\">什么是零知识证明</RouterLink></li><li><RouterLink to=\"#零知识证明可以分为交互式和非交互式两种。\">零知识证明可以分为交互式和非交互式两种。</RouterLink><ul><li><RouterLink to=\"#交互式\">交互式</RouterLink></li><li><RouterLink to=\"#非交互式\">非交互式</RouterLink></li></ul></li><li><RouterLink to=\"#区块链-零知识证明使用\">区块链-零知识证明使用</RouterLink></li></ul></nav>\n<h2 id=\"什么是零知识证明\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#什么是零知识证明\" aria-hidden=\"true\">#</a> 什么是零知识证明</h2>\n<blockquote>\n<p>零知识证明(Zero—Knowledge Proof)，是由S.Goldwasser、S.Micali及C.Rackoff在20世纪80年代初提出的。它早于区块链诞生，但由于区块链，它被大家所熟知。它指的是证明者能够在不向验证者提供任何有用的信息的情况下，使验证者相信某个论断是正确的。</p>\n</blockquote>\n<h2 id=\"零知识证明可以分为交互式和非交互式两种。\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#零知识证明可以分为交互式和非交互式两种。\" aria-hidden=\"true\">#</a> 零知识证明可以分为交互式和非交互式两种。</h2>\n<h3 id=\"交互式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#交互式\" aria-hidden=\"true\">#</a> 交互式</h3>\n<blockquote>\n<p>零知识证明协议的基础是交互式的。它要求验证者不断对证明者所拥有的“知识”进行一系列提问。证明者通过回答一系列问题，让验证者相信证明者的确知道这些“知识”。然而，这种简单的方法并不能使人相信证明者和验证者都是真实的，两者可以提前串通，以便证明者可以在不知道答案的情况下依然通过验证。</p>\n</blockquote>\n<h3 id=\"非交互式\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#非交互式\" aria-hidden=\"true\">#</a> 非交互式</h3>\n<blockquote>\n<p>非交互式零知识证明不需要交互过程，避免了串通的可能性，但是可能需要额外的机器和程序来确定实验的顺序。</p>\n</blockquote>\n<h2 id=\"区块链-零知识证明使用\" tabindex=\"-1\"><a class=\"header-anchor\" href=\"#区块链-零知识证明使用\" aria-hidden=\"true\">#</a> 区块链-零知识证明使用</h2>\n<p>在现在的时代，个人的身份与很多信息进行了关联，你的手机号，身份证号，银行卡号等等都绑定在一起，只要知道你的手机号，就可以通过关联信息获取到你的姓名，出生年月等等信息，可所谓“牵一发而动全身”。</p>\n<p>在区块链的世界中，用地址来表示交易双方，这样达到了匿名的作用。然而，链上的信息虽然是匿名的，但是通过链上信息绑定的链下信息，像很多交易所都绑定了链上地址与链下的银行账户、支付宝，使得可以很方便的追溯真实世界的交易双方，使得匿名性荡然无存。</p>\n<p>那么，有没有一种方法，能够在隐藏发送方、接受方以及交易金额等其他细节的情况下，保证交易有效呢？</p>\n<p>答案就是：零知识证明</p>\n<p>比如zk-snark，zk-stark, bulletproof， aztec， plonk等等</p>\n<img :src=\"$withBase('/images/algorithm/merkle.png')\" alt=\"merkle\">\n<p>零知识证明：例如如何证明某个数据（D0……D3）中包括给定内容 D0，很简单，构造 一个默克尔树，公布 N0，N1，N4，Root，D0 拥有者可以很容易检测 D0 存在，但不知 道其它内容。</p>\n","export * from \"-!../../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[1]!../../../../../node_modules/@vuepress/bundler-webpack/lib/build/ssr/vuepressLoader.js!../../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./Zero_Knowledge_Proof.html.vue?vue&type=template&id=3e30c15e\"","import { ssrRender } from \"./Zero_Knowledge_Proof.html.vue?vue&type=template&id=3e30c15e\"\nconst script = {}\nimport { ssrContextKey } from 'vue'\nscript.ssrRender = (...args) => {\n  const ssrContext = args[2].appContext.provides[ssrContextKey]\n  ssrContext._registeredComponents.add(\"D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\@vuepress\\\\bundler-webpack\\\\lib\\\\build\\\\ssr\\\\vuepressLoader.js!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\node_modules\\\\vue-loader\\\\dist\\\\index.js??ruleSet[0].use[1]!D:\\\\yaomin\\\\WorkSpace\\\\yaomin_java2\\\\docs\\\\.vuepress\\\\.temp\\\\pages\\\\algorithm\\\\Zero_Knowledge_Proof.html.vue\")\n  return ssrRender(...args)\n}\n\n\nexport default script"],"names":["$withBase"],"sourceRoot":""}