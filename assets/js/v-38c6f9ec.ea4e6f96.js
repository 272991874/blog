"use strict";(self.webpackChunkyaomin=self.webpackChunkyaomin||[]).push([[7820],{4693:(a,e,i)=>{i.r(e),i.d(e,{data:()=>l});const l={key:"v-38c6f9ec",path:"/java/java_final.html",title:"final 在 java 中的作用",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"特性：被final修饰不可修改",slug:"特性-被final修饰不可修改",children:[]},{level:2,title:"修饰变量分两种情况",slug:"修饰变量分两种情况",children:[{level:3,title:"基本数据类型",slug:"基本数据类型",children:[]},{level:3,title:"引用数据类型",slug:"引用数据类型",children:[]}]}],filePathRelative:"java/java_final.md",git:{contributors:[{name:"yaomin",email:"272991874@qq.com",commits:1}]}}},4089:(a,e,i)=>{i.r(e),i.d(e,{default:()=>h});var l=i(6252);const n=(0,l.uE)('<h1 id="final-在-java-中的作用" tabindex="-1"><a class="header-anchor" href="#final-在-java-中的作用" aria-hidden="true">#</a> final 在 java 中的作用</h1><p>final作为关键词可以用在三个地方：类、类属性、类方法。</p><h2 id="特性-被final修饰不可修改" tabindex="-1"><a class="header-anchor" href="#特性-被final修饰不可修改" aria-hidden="true">#</a> 特性：被final修饰不可修改</h2><p>1.修饰类：表示该类不能被继承；<br> 2.修饰方法：表示方法不能被重写；<br> 3.修饰变量：表示变量只能一次赋值以后值不能被修改（常量）。</p><h2 id="修饰变量分两种情况" tabindex="-1"><a class="header-anchor" href="#修饰变量分两种情况" aria-hidden="true">#</a> 修饰变量分两种情况</h2><h3 id="基本数据类型" tabindex="-1"><a class="header-anchor" href="#基本数据类型" aria-hidden="true">#</a> 基本数据类型</h3><p>数据在初始化以后不能改变</p><h3 id="引用数据类型" tabindex="-1"><a class="header-anchor" href="#引用数据类型" aria-hidden="true">#</a> 引用数据类型</h3><p>数据在初始化以后永远指向一个内存地址且不可修改<br> 被指向的地址可以修改<br> 之所以引用数据类型可以改变，是因为被指向的不是对象的数据，而是一个指向Object o对象的指针，而这个指针没有发生变化，发生变化的是指针所指的值。</p>',9),r=["src"],h={render:function(a,e){return(0,l.wg)(),(0,l.iD)(l.HY,null,[n,(0,l._)("img",{src:a.$withBase("/images/java-final.png"),alt:"final"},null,8,r)],64)}}}}]);