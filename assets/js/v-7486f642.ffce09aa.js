"use strict";(self.webpackChunkyaomin=self.webpackChunkyaomin||[]).push([[6247],{7816:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-7486f642",path:"/shell/database_transfer.html",title:"数据库迁移脚本",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"shell/database_transfer.md",git:{contributors:[{name:"Amin.Yao",email:"Amin.Yao@gaiaworks.cn",commits:1}]}}},8451:(s,n,a)=>{a.r(n),a.d(n,{default:()=>p});const e=(0,a(6252).uE)('<h1 id="数据库迁移脚本" tabindex="-1"><a class="header-anchor" href="#数据库迁移脚本" aria-hidden="true">#</a> 数据库迁移脚本</h1><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>\n<span class="token function-name function">check_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n<span class="token assign-left variable">status</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token builtin class-name">echo</span> $?<span class="token variable">`</span></span>\n<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$status</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;运行异常，退出&quot;</span>\n<span class="token builtin class-name">exit</span> <span class="token number">1</span>\n<span class="token keyword">fi</span>\n<span class="token punctuation">}</span>\n<span class="token function-name function">check_connect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;quit&quot;</span><span class="token operator">|</span> <span class="token function">timeout</span> 5s telnet <span class="token variable">$1</span> <span class="token variable">$2</span><span class="token operator">|</span><span class="token function">grep</span> -q Escape\n<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;数据库端口连接正常&quot;</span>\n<span class="token keyword">else</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;数据库连接异常，退出！&quot;</span>\n<span class="token builtin class-name">exit</span> <span class="token number">1</span>\n<span class="token keyword">fi</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> -eq <span class="token number">5</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;开始创建&quot;</span><span class="token variable">$5</span><span class="token string">&quot;排班数据库&quot;</span>\nmysql -h<span class="token variable">$1</span> -P<span class="token variable">$2</span> -u<span class="token variable">$3</span> -p<span class="token variable">$4</span> -e <span class="token string">&quot;create database <span class="token variable">$5</span> CHARACTER SET utf8 COLLATE utf8_general_ci;&quot;</span>\ncheck_status\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">${5}</span>排班数据库创建完成&quot;</span>\n<span class="token keyword">elif</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> -eq <span class="token number">11</span> <span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">then</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;开始备份并导入数据库&quot;</span>\ncheck_connect <span class="token variable">$6</span> <span class="token variable">$7</span>\nmysqldump -h<span class="token variable">$6</span> -P<span class="token variable">$7</span> -u<span class="token variable">$8</span> -p<span class="token variable">$9</span> --set-gtid-purged<span class="token operator">=</span>off --single-transaction <span class="token variable">${10}</span>  -q -R  -E <span class="token operator">|</span> <span class="token function">sed</span>   -e <span class="token string">&quot;s/DEFINE.*PROCEDURE/PROCEDURE/;s/DEFINE.*FUNCTION/FUNCTION/;s/DEFINER.*DEFINER//;s/DEFINER.*EVENT/EVENT/;s/DEFINER.*VIEW/VIEW/;s/utf8mb4_0900_ai_ci/utf8mb4_general_ci/;s/CHARSET=utf8mb3/CHARSET=utf8/;s/\\<span class="token variable"><span class="token variable">`</span>$<span class="token punctuation">{</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">\\</span><span class="token variable">`</span></span>.//g&quot;</span><span class="token operator">&gt;</span>/data/<span class="token variable">${11}</span>_dump.sql\ncheck_status\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;备份成功&quot;</span>\n<span class="token comment">#mysql -h$1 -P$2 -u$3 -p$4 -e &#39;set sql_log_bin=0&#39;</span>\nmysql -h<span class="token variable">$1</span> -P<span class="token variable">$2</span> -u<span class="token variable">$3</span> -p<span class="token variable">$4</span> -D<span class="token string">&quot;<span class="token variable">$5</span>&quot;</span> <span class="token operator">&lt;</span>/data/<span class="token variable">${11}</span>_dump.sql\ncheck_status\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;导库成功&quot;</span>\n<span class="token comment">#rm -rf /data/${11}_dump.sql</span>\n<span class="token keyword">else</span>\n<span class="token builtin class-name">echo</span> <span class="token string">&quot;参数有误&quot;</span>\n<span class="token builtin class-name">exit</span> <span class="token number">1</span>\n<span class="token keyword">fi</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br></div></div>',2),p={render:function(s,n){return e}}}}]);