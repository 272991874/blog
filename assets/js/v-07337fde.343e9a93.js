"use strict";(self.webpackChunkyaomin=self.webpackChunkyaomin||[]).push([[846],{8089:(e,a,l)=>{l.r(a),l.d(a,{data:()=>u});const u={key:"v-07337fde",path:"/java/java_jvm_dump.html",title:"JVM问题排查",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"一、生成dump文件",slug:"一、生成dump文件",children:[{level:3,title:"出现OOM时自动生成堆dump",slug:"出现oom时自动生成堆dump",children:[]},{level:3,title:"人工通过执行指令，直接生成当前JVM的dump文件",slug:"人工通过执行指令-直接生成当前jvm的dump文件",children:[]}]},{level:2,title:"二、分析dump",slug:"二、分析dump",children:[]}],filePathRelative:"java/java_jvm_dump.md",git:{contributors:[{name:"Amin.Yao",email:"Amin.Yao@gaiaworks.cn",commits:2}]}}},8619:(e,a,l)=>{l.r(a),l.d(a,{default:()=>s});var u=l(6252);const d=(0,u._)("h1",{id:"jvm问题排查",tabindex:"-1"},[(0,u._)("a",{class:"header-anchor",href:"#jvm问题排查","aria-hidden":"true"},"#"),(0,u.Uk)(" JVM问题排查")],-1),m={class:"table-of-contents"},p=(0,u.Uk)("一、生成dump文件"),i=(0,u.Uk)("出现OOM时自动生成堆dump"),t=(0,u.Uk)("人工通过执行指令，直接生成当前JVM的dump文件"),r=(0,u.Uk)("二、分析dump"),n=(0,u.uE)('<h2 id="一、生成dump文件" tabindex="-1"><a class="header-anchor" href="#一、生成dump文件" aria-hidden="true">#</a> 一、生成dump文件</h2><h3 id="出现oom时自动生成堆dump" tabindex="-1"><a class="header-anchor" href="#出现oom时自动生成堆dump" aria-hidden="true">#</a> 出现OOM时自动生成堆dump</h3><p>JVM启动命令增加两个参数: -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/app/dumps/</p><h3 id="人工通过执行指令-直接生成当前jvm的dump文件" tabindex="-1"><a class="header-anchor" href="#人工通过执行指令-直接生成当前jvm的dump文件" aria-hidden="true">#</a> 人工通过执行指令，直接生成当前JVM的dump文件</h3><p>例：</p><ul><li><p>jmap -dump:format=b,file=/home/app/dump.hprof 21488，其中21488是JVM的当前进程号</p></li><li><p>内存或线程日志 jmap -dump:live,format=b,file=/home/myHeapDump.hprof 21488</p></li></ul><h2 id="二、分析dump" tabindex="-1"><a class="header-anchor" href="#二、分析dump" aria-hidden="true">#</a> 二、分析dump</h2><ol><li>打开JDK的 bin目录下jvisualvm.exe</li><li>在点击工具-&gt;插件里安装VisualVM-Classfish</li><li>导入.hprof文件</li></ol>',8),h={href:"https://zhuanlan.zhihu.com/p/267381560",target:"_blank",rel:"noopener noreferrer"},o=(0,u.Uk)("更多"),s={render:function(e,a){const l=(0,u.up)("RouterLink"),s=(0,u.up)("OutboundLink");return(0,u.wg)(),(0,u.iD)(u.HY,null,[d,(0,u._)("nav",m,[(0,u._)("ul",null,[(0,u._)("li",null,[(0,u.Wm)(l,{to:"#一、生成dump文件"},{default:(0,u.w5)((()=>[p])),_:1}),(0,u._)("ul",null,[(0,u._)("li",null,[(0,u.Wm)(l,{to:"#出现oom时自动生成堆dump"},{default:(0,u.w5)((()=>[i])),_:1})]),(0,u._)("li",null,[(0,u.Wm)(l,{to:"#人工通过执行指令-直接生成当前jvm的dump文件"},{default:(0,u.w5)((()=>[t])),_:1})])])]),(0,u._)("li",null,[(0,u.Wm)(l,{to:"#二、分析dump"},{default:(0,u.w5)((()=>[r])),_:1})])])]),n,(0,u._)("p",null,[(0,u._)("a",h,[o,(0,u.Wm)(s)])])],64)}}}}]);