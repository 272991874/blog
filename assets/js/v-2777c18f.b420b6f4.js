"use strict";(self.webpackChunkyaomin=self.webpackChunkyaomin||[]).push([[2870],{4592:(a,e,r)=>{r.r(e),r.d(e,{data:()=>i});const i={key:"v-2777c18f",path:"/programming/programming.html",title:"Reactive Spring",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[],filePathRelative:"programming/programming.md",git:{contributors:[{name:"Amin.Yao",email:"Amin.Yao@gaiaworks.cn",commits:1}]}}},7673:(a,e,r)=>{r.r(e),r.d(e,{default:()=>c});var i=r(6252);const n=(0,i._)("h1",{id:"reactive-spring",tabindex:"-1"},[(0,i._)("a",{class:"header-anchor",href:"#reactive-spring","aria-hidden":"true"},"#"),(0,i.Uk)(" Reactive Spring")],-1),t=(0,i._)("p",null,"反应式编程（Reactive Programming）是一种面向数据流和变化传播的编程范式。",-1),m=(0,i._)("p",null,"实际项目中，线程阻塞场景往往不只有Http请求阻塞，还有Mysql请求，Redis请求，Kafka请求等等导致的阻塞。从这些数据源中获取数据时，大多数都是阻塞直到数据源返回数据。 而Reactive Spring强大在于，它也支持这些数据源的非阻塞响应式编程。",-1),c={render:function(a,e){return(0,i.wg)(),(0,i.iD)(i.HY,null,[n,t,m],64)}}}}]);